C51 COMPILER V9.59.0.0   STC_CLOCK                                                         04/11/2020 23:05:51 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE STC_CLOCK
OBJECT MODULE PLACED IN .\Objects\stc-clock.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE stc-clock.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\st
                    -c-clock.lst) TABS(2) OBJECT(.\Objects\stc-clock.obj)

line level    source

   1          #include "reg51.h"
   2          #include "intrins.h"
   3          
   4          typedef unsigned char BYTE;
   5          typedef unsigned int WORD;
   6          sbit P17=P1^7;
   7          sbit P15=P1^5;
   8          sbit P32=P3^2;
   9          sbit P10=P1^0;
  10          
  11          #define FOSC 11059200L      //System frequency
  12          #define BAUD 9600           //UART baudrate
  13          
  14          /*Define UART parity mode*/
  15          #define NONE_PARITY     0   //None parity
  16          #define ODD_PARITY      1   //Odd parity
  17          #define EVEN_PARITY     2   //Even parity
  18          #define MARK_PARITY     3   //Mark parity
  19          #define SPACE_PARITY    4   //Space parity
  20          
  21          #define PARITYBIT EVEN_PARITY   //Testing even parity
  22          
  23          bit busy;
  24          unsigned long int count;
  25          unsigned long int ss;
  26          unsigned char sspdd[10]="0123456789";
  27          unsigned int ms_1=0x66;                     //initial timer0 low byte
  28          unsigned int ma_1=0xfc;                //initial timer0 high byte
  29          
  30          void uart_init()
  31          {
  32   1      #if (PARITYBIT == NONE_PARITY)
                  SCON = 0x50;            //8-bit variable UART
              #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
  35   1          SCON = 0xda;            //9-bit variable UART, parity bit initial to 1
  36   1      #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;            //9-bit variable UART, parity bit initial to 0
              #endif
  39   1      
  40   1          TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  41   1          TH1 = TL1 = -(FOSC/12/32/BAUD); //Set auto-reload vaule
  42   1          TR1 = 1;                //Timer1 start run
  43   1          ES = 1;                 //Enable UART interrupt
  44   1          EA = 1;                 //Open master interrupt switch 
  45   1      }
  46          
  47          void zhongduan()
  48          {
  49   1          IT0 = 1;                        //set INT0 int type (1:Falling 0:Low level)
  50   1          EX0 = 1;                        //enable INT0 interrupt
  51   1          EA = 1;                         //open global interrupt switch
  52   1      }
  53          
  54          void time0_init()
C51 COMPILER V9.59.0.0   STC_CLOCK                                                         04/11/2020 23:05:51 PAGE 2   

  55          {
  56   1          TMOD |= 0x01;                    //set timer0 as mode1 (16-bit)
  57   1          TL0 = ms_1;                     //initial timer0 low byte
  58   1          TH0 = ma_1;                //initial timer0 high byte
  59   1          TR0 = 1;                        //timer0 start running
  60   1          ET0 = 1;                        //enable timer0 interrupt
  61   1      }
  62          
  63          void SendData(BYTE dat)
  64          {
  65   1          while (busy);           //Wait for the completion of the previous data is sent
  66   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
  67   1          if (P)                  //Set the parity bit according to P
  68   1          {
  69   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;            //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
  72   2              TB8 = 1;            //Set parity bit to 1
  73   2      #endif
  74   2          }
  75   1          else
  76   1          {
  77   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;            //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
  80   2              TB8 = 0;            //Set parity bit to 0
  81   2      #endif
  82   2          }
  83   1          busy = 1;
  84   1          SBUF = ACC;             //Send data to UART buffer
  85   1      }
  86          
  87          void SendString(char *s)
  88          {
  89   1          while (*s)              //Check the end of the string
  90   1          {
  91   2              SendData(*s++);     //Send current char and increment string ptr
  92   2          }
  93   1      }
  94          
  95          void SendoneString(char *s)
  96          {
  97   1              SendData(*s);     //Send current char and increment string ptr
  98   1      }
  99          
 100          
 101          
 102          
 103          void main()
 104          {
 105   1      P10=1;
 106   1      uart_init();
 107   1      zhongduan();
 108   1      time0_init();
 109   1        
 110   1      while(1)
 111   1      {
 112   2      
 113   2      while(ss)
 114   2      {
 115   3        SendoneString(&sspdd[(ss%10)]);
 116   3        ss=ss/10;
C51 COMPILER V9.59.0.0   STC_CLOCK                                                         04/11/2020 23:05:51 PAGE 3   

 117   3        if(ss==0)
 118   3        {
 119   4          SendString("\r\n");
 120   4        }
 121   3      }
 122   2      }
 123   1      }
 124          
 125          
 126          void clock() interrupt 1
 127          {
 128   1        P15=!P15;
 129   1        TL0 = ms_1;                     //initial timer0 low byte
 130   1        TH0 = ma_1;                //initial timer0 high byte
 131   1        count++;                //1ms
 132   1      }
 133          
 134          void exint0() interrupt 0           //(location at 0003H)
 135          {
 136   1      
 137   1      P17=!P17;
 138   1      ss=count;
 139   1      count=0;
 140   1      
 141   1      }
 142          
 143          
 144          
 145          void Uart_Isr() interrupt 4
 146          {
 147   1          if (RI)
 148   1          {
 149   2              RI = 0;             //Clear receive interrupt flag
 150   2          }
 151   1          if (TI)
 152   1          {
 153   2              TI = 0;             //Clear transmit interrupt flag
 154   2              busy = 0;           //Clear transmit busy flag
 155   2          }
 156   1      }
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    278    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
